
unit6_lesson4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000304  0800030c  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000304  08000304  0001030c  2**0
                  CONTENTS
  4 .ARM          00000000  08000304  08000304  0001030c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000304  0800030c  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000304  08000304  00010304  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000308  08000308  00010308  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800030c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800030c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001030c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010335  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000011c  00000000  00000000  00010378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000086  00000000  00000000  00010494  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    000000f8  00000000  00000000  0001051a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000060  00000000  00000000  00010618  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00000048  00000000  00000000  00010678  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001bfc  00000000  00000000  000106c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000670  00000000  00000000  000122bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000078eb  00000000  00000000  0001292c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000000b8  00000000  00000000  0001a218  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002ec 	.word	0x080002ec

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002ec 	.word	0x080002ec

08000170 <clock_init>:
#define NVIC_BASE		0xE000E000
#define NVIC_ISER0		*(volatile uint32_t *)(NVIC_BASE + 0x100)


void clock_init(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	RCC_APB2ENR |= 1<<2; 		// IOPAEN enables GPIOA
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <clock_init+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a06      	ldr	r2, [pc, #24]	; (8000194 <clock_init+0x24>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]

	//Enable clock for AFIO peripheral
	RCC_APB2ENR |= (1<<0);
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <clock_init+0x24>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a03      	ldr	r2, [pc, #12]	; (8000194 <clock_init+0x24>)
 8000186:	f043 0301 	orr.w	r3, r3, #1
 800018a:	6013      	str	r3, [r2, #0]
}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40021018 	.word	0x40021018

08000198 <GPIO_init>:

void GPIO_init(void)
{
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	//pin13 portA output
	GPIOA_CRH &= 0xFF0FFFFF;
 800019c:	4b0d      	ldr	r3, [pc, #52]	; (80001d4 <GPIO_init+0x3c>)
 800019e:	681b      	ldr	r3, [r3, #0]
 80001a0:	4a0c      	ldr	r2, [pc, #48]	; (80001d4 <GPIO_init+0x3c>)
 80001a2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80001a6:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= 0x00200000;
 80001a8:	4b0a      	ldr	r3, [pc, #40]	; (80001d4 <GPIO_init+0x3c>)
 80001aa:	681b      	ldr	r3, [r3, #0]
 80001ac:	4a09      	ldr	r2, [pc, #36]	; (80001d4 <GPIO_init+0x3c>)
 80001ae:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001b2:	6013      	str	r3, [r2, #0]

	//pin0 portA floating input
	GPIOA_CRL &= 0xFFFFFFF0;
 80001b4:	4b08      	ldr	r3, [pc, #32]	; (80001d8 <GPIO_init+0x40>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	4a07      	ldr	r2, [pc, #28]	; (80001d8 <GPIO_init+0x40>)
 80001ba:	f023 030f 	bic.w	r3, r3, #15
 80001be:	6013      	str	r3, [r2, #0]
	GPIOA_CRL |= 0x000000004;
 80001c0:	4b05      	ldr	r3, [pc, #20]	; (80001d8 <GPIO_init+0x40>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	4a04      	ldr	r2, [pc, #16]	; (80001d8 <GPIO_init+0x40>)
 80001c6:	f043 0304 	orr.w	r3, r3, #4
 80001ca:	6013      	str	r3, [r2, #0]
}
 80001cc:	bf00      	nop
 80001ce:	46bd      	mov	sp, r7
 80001d0:	bc80      	pop	{r7}
 80001d2:	4770      	bx	lr
 80001d4:	40010804 	.word	0x40010804
 80001d8:	40010800 	.word	0x40010800

080001dc <main>:

int main(void)
{
 80001dc:	b580      	push	{r7, lr}
 80001de:	af00      	add	r7, sp, #0

	clock_init();
 80001e0:	f7ff ffc6 	bl	8000170 <clock_init>
	GPIO_init();
 80001e4:	f7ff ffd8 	bl	8000198 <GPIO_init>

	//Rising edge for input line 0
	EXTI_RSTR |= (1<<0);
 80001e8:	4b0a      	ldr	r3, [pc, #40]	; (8000214 <main+0x38>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a09      	ldr	r2, [pc, #36]	; (8000214 <main+0x38>)
 80001ee:	f043 0301 	orr.w	r3, r3, #1
 80001f2:	6013      	str	r3, [r2, #0]

	//Remove mask line 0 in interrupt mask register
	EXTI_IMR |= (1<<0);
 80001f4:	4b08      	ldr	r3, [pc, #32]	; (8000218 <main+0x3c>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a07      	ldr	r2, [pc, #28]	; (8000218 <main+0x3c>)
 80001fa:	f043 0301 	orr.w	r3, r3, #1
 80001fe:	6013      	str	r3, [r2, #0]

	//configure EXTI0 for pin A0
	AFIO_EXTICR1 = (0b0000<<0);
 8000200:	4b06      	ldr	r3, [pc, #24]	; (800021c <main+0x40>)
 8000202:	2200      	movs	r2, #0
 8000204:	601a      	str	r2, [r3, #0]

	//enable NVIC interrupt number 6 for EXTI0
	NVIC_ISER0 |= (1<<6);
 8000206:	4b06      	ldr	r3, [pc, #24]	; (8000220 <main+0x44>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	4a05      	ldr	r2, [pc, #20]	; (8000220 <main+0x44>)
 800020c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000210:	6013      	str	r3, [r2, #0]

	while(1)
 8000212:	e7fe      	b.n	8000212 <main+0x36>
 8000214:	40010408 	.word	0x40010408
 8000218:	40010400 	.word	0x40010400
 800021c:	40010008 	.word	0x40010008
 8000220:	e000e100 	.word	0xe000e100

08000224 <EXTI0_IRQHandler>:
	{
	}
}

void EXTI0_IRQHandler(void)
{
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
	//reset pending request for line 0 in EXTI_PR
	EXTI_PR |= (1<<0);
 8000228:	4b07      	ldr	r3, [pc, #28]	; (8000248 <EXTI0_IRQHandler+0x24>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a06      	ldr	r2, [pc, #24]	; (8000248 <EXTI0_IRQHandler+0x24>)
 800022e:	f043 0301 	orr.w	r3, r3, #1
 8000232:	6013      	str	r3, [r2, #0]

	//EXTI0 PORTA pin0 rising edge
	//toggle led pin 13 PORTA
	GPIOA_ODR ^= 1<<13 ;
 8000234:	4b05      	ldr	r3, [pc, #20]	; (800024c <EXTI0_IRQHandler+0x28>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a04      	ldr	r2, [pc, #16]	; (800024c <EXTI0_IRQHandler+0x28>)
 800023a:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 800023e:	6013      	str	r3, [r2, #0]
}
 8000240:	bf00      	nop
 8000242:	46bd      	mov	sp, r7
 8000244:	bc80      	pop	{r7}
 8000246:	4770      	bx	lr
 8000248:	40010414 	.word	0x40010414
 800024c:	4001080c 	.word	0x4001080c

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	; (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	; (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	; (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	; (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	; (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	; (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f811 	bl	80002a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f7ff ffab 	bl	80001dc <main>

08000286 <LoopForever>:

LoopForever:
    b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	0800030c 	.word	0x0800030c
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC1_2_IRQHandler>
	...

080002a4 <__libc_init_array>:
 80002a4:	b570      	push	{r4, r5, r6, lr}
 80002a6:	2600      	movs	r6, #0
 80002a8:	4d0c      	ldr	r5, [pc, #48]	; (80002dc <__libc_init_array+0x38>)
 80002aa:	4c0d      	ldr	r4, [pc, #52]	; (80002e0 <__libc_init_array+0x3c>)
 80002ac:	1b64      	subs	r4, r4, r5
 80002ae:	10a4      	asrs	r4, r4, #2
 80002b0:	42a6      	cmp	r6, r4
 80002b2:	d109      	bne.n	80002c8 <__libc_init_array+0x24>
 80002b4:	f000 f81a 	bl	80002ec <_init>
 80002b8:	2600      	movs	r6, #0
 80002ba:	4d0a      	ldr	r5, [pc, #40]	; (80002e4 <__libc_init_array+0x40>)
 80002bc:	4c0a      	ldr	r4, [pc, #40]	; (80002e8 <__libc_init_array+0x44>)
 80002be:	1b64      	subs	r4, r4, r5
 80002c0:	10a4      	asrs	r4, r4, #2
 80002c2:	42a6      	cmp	r6, r4
 80002c4:	d105      	bne.n	80002d2 <__libc_init_array+0x2e>
 80002c6:	bd70      	pop	{r4, r5, r6, pc}
 80002c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002cc:	4798      	blx	r3
 80002ce:	3601      	adds	r6, #1
 80002d0:	e7ee      	b.n	80002b0 <__libc_init_array+0xc>
 80002d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d6:	4798      	blx	r3
 80002d8:	3601      	adds	r6, #1
 80002da:	e7f2      	b.n	80002c2 <__libc_init_array+0x1e>
 80002dc:	08000304 	.word	0x08000304
 80002e0:	08000304 	.word	0x08000304
 80002e4:	08000304 	.word	0x08000304
 80002e8:	08000308 	.word	0x08000308

080002ec <_init>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr

080002f8 <_fini>:
 80002f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fa:	bf00      	nop
 80002fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fe:	bc08      	pop	{r3}
 8000300:	469e      	mov	lr, r3
 8000302:	4770      	bx	lr
